<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Booking;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\Mapping;
use Doctrine\ORM\NonUniqueResultException;
use Symfony\Component\HttpFoundation\Response;

/**
 * BookingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BookingRepository extends \Doctrine\ORM\EntityRepository
{

    public function __construct(EntityManagerInterface $em)
    {
        parent::__construct( $em, new Mapping\ClassMetadata(Booking::class));
    }

    public function findAll()
    {
        return parent::findAll();
    }

    public function findCarAndBooking($id)
    {

        $query=$this->getEntityManager()
            ->createQuery('SELECT b, c FROM AppBundle:Booking b
                                                            JOIN b.car c
                                                            WHERE b.id=:id'
        )->setParameter('id',$id);

        return $query->getResult();

//        try
//        {
//            return $query->getOneOrNullResult();
//        }
//        catch (NonUniqueResultException $e)
//        {
//            return new Response('No such booking finded');
//        }
    }
    public function save(Booking $booking)
    {
        try
        {
            $this->_em->persist($booking);
            $this->_em->flush();

            return true;
        }
        catch (\Exception $exception)
        {
            return false;
        }
    }
    public function delete(Booking $id)
    {
        try{
            $this->_em->remove($id);
            $this->_em->flush();

            return true;
        }catch (\Exception $exception){

            return false;
        }
    }
    public function deleteAll(){

        $booking= $this->findAll();
        try{
            foreach ($booking as $item) {
                $this->_em->remove($item);
                $this->_em->flush();
            }
            return true;
        }catch (\Exception $exception){
            return false;
        }
    }


}
