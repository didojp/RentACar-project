<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Car;
use AppBundle\Entity\Category;
use AppBundle\Entity\Transmision;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\Mapping\ClassMetadata;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Doctrine\ORM\Tools\Pagination\Paginator;



/**
 * CarRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CarRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * CarRepository constructor.
     * @param EntityManagerInterface $em
     */
    public function __construct(EntityManagerInterface $em)
    {
        parent::__construct($em, new ClassMetadata(Car::class));
    }

    public function save(Car $car)
    {
        try
        {
            $this->_em->persist($car);
            $this->_em->flush();

            return $car->getId();
        }
        catch (\Exception $exception)
        {
            return false;
        }

    }
    public function update(Car $car)
    {
        try{
            $this->_em->merge($car);
            $this->_em->flush();

            return true;
        }catch (\Exception $exception){

            return false;
        }
    }

    public function delete(Car $car)
    {
        try{
            $this->_em->remove($car);
            $this->_em->flush();

            return true;
        }catch (\Exception $exception){

            return false;
        }
    }

    public function find($id, $lockMode = null, $lockVersion = null)
    {
        return parent::find($id, $lockMode, $lockVersion);
    }

    public function findAll()
    {
        return parent::findAll();
    }

    /**
     * Query to DTO defining search by transmision and category
     * @param $transmision
     * @param $category
     * @return array
     *
     */
    public function findByAll($transmision, $category)
    {
        $db=$this->getEntityManager()->getConnection();
        $qb=$db->createQueryBuilder();
        $qb->select('c.id')
            ->from('cars', 'c')
            ->where('c.transmision_id=?')
            ->andWhere('c.category_id=?')
            ->setParameter(0,$transmision)
            ->setParameter(1,$category)
            ->orderBy('id','ASC')
        ;
        $result=$qb->execute();
        return $result->fetchAll();

    }

    public function findByCategory($category)
    {
        $db=$this->getEntityManager()->getConnection();
        $qb=$db->createQueryBuilder();
        $qb->select('c.id')
            ->from('cars','c')
            ->where('c.category_id=?')
            ->setParameter(0, $category)
            ->orderBy('id', 'ASC');

        $result=$qb->execute();
        return $result->fetchAll();

    }
    public function lastInsertedId()
    {

        $connection=$this->getEntityManager()->getConnection();
        return $connection->lastInsertId();



    }


}

